<?xml version="1.0" ?>
<robot name="testbed" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Silver" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>

  <gazebo>
    <plugin name="diff_drive_control" filename="libgazebo_ros_diff_drive.so">
      <update_rate>50</update_rate>
     
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>

      <wheel_separation>0.35</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>

      <command_topic>cmd_vel</command_topic>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>
  </gazebo>

  <gazebo reference="imu_link_1">
    <gravity>true</gravity>
    <sensor name="imu_link_1" type="imu">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <plugin name="my_imu_plugin" filename="libgazebo_ros_imu_sensor.so">
      <initial_orientation_as_reference>false</initial_orientation_as_reference>>
        <ros>
          <remapping>~/out:=imu</remapping>
        </ros>
        <frame_name>imu_link_1</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="lidar_link_1">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>300</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="my_ray_sensor_plugin" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <!-- Configure namespace and remap to publish to /ray/pointcloud2 -->
          <remapping>~/out:=scan</remapping>
        </ros>
        <!-- Output as a PointCloud2, see above for other types -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <!-- Clip intensity values so all are above 100, optional -->
        <min_intensity>100.0</min_intensity>
        <!-- Frame id for header of output, defaults to sensor's parent link name -->
        <frame_name>lidar_link_1</frame_name>
      </plugin>
    </sensor>
  </gazebo>

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="caster_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="caster_2">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="caster_3">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="caster_4">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="lidar_link_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="imu_link_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="dummy_link_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_wheel_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_wheel_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide> 
</gazebo>

</robot>
